openapi: 3.1.0
info:
  title: Reference
  description: API Docs for Briefkasten
  version: 0.1.9
  content:
    email: info@briefkastenhq.com
    url: "https://docs.briefkastenhq.com"
servers:
  - url: https://briefkastenhq.com/api
    description: Production
  - url: http://localhost:3000/api
    description: Local Dev
paths:
  "/bookmarks":
    get:
      summary: Search for bookmarks
      parameters:
        - name: query
          in: query
          description: Search query string
          required: true
          schema:
            type: string
            example: "Tech blogs"
            format: string
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                description: List of bookmark results
                type: array
                items:
                  $ref: "#/components/bookmark"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    post:
      summary: Create bookmarks
      requestBody:
        description: The bookmark to create
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/bookmark"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/bookmark"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    put:
      summary: Update bookmarks
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      requestBody:
        description: The bookmark to update
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/bookmark"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/bookmark"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    delete:
      summary: Delete bookmarks
      requestBody:
        description: Bookmark ID to delete
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - url
              properties:
                id:
                  type: string
                  format: cuid
                  example: cjld2cjxh0000qzrmn831i7rn
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
  "/tags":
    get:
      summary: Search for tags
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                description: List of tag results
                type: array
                items:
                  $ref: "#/components/tag"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    post:
      summary: Create tag
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      requestBody:
        description: The tag to create
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/tag"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/tag"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    put:
      summary: Update tag
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      requestBody:
        description: The tag to update
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/tag"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/tag"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    delete:
      summary: Delete tag
      requestBody:
        description: Tag ID to delete
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - url
              properties:
                id:
                  type: string
                  format: cuid
                  example: cjld2cjxh0000qzrmn831i7rn
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
  "/categories":
    get:
      summary: Search for categories
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                description: List of categories results
                type: array
                items:
                  $ref: "#/components/category"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    post:
      summary: Create categories
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      requestBody:
        description: The category to create
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/category"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/category"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    put:
      summary: Update categories
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      requestBody:
        description: The category to update
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/category"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/category"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    delete:
      summary: Delete categories
      requestBody:
        description: Category ID to delete
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - url
              properties:
                id:
                  type: string
                  format: cuid
                  example: cjld2cjxh0000qzrmn831i7rn
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
components:
  securitySchemes:
    ApiKeyAuth: # arbitrary name for the security scheme
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-API-KEY # name of the header, query parameter or cookie
  bookmark:
    type: object
    required:
      - title
      - url
    properties:
      id:
        type: string
        format: cuid
        example: cjld2cjxh0000qzrmn831i7rn
      userId:
        type: string
        format: cuid
        description: Linked user id
        example: cjld2cyuq0000t3rmniod1foy
      title:
        type: string
        description: Page or link title
        example: "Tech Blog"
      url:
        type: string
        description: Link to the bookmark
        example: https://engadget.com
      category?:
        type: string
        description: Category grouping for your bookmark
      desc?:
        type: string
        description: Description of the bookmark
      tags?:
        type: array
        items:
          $ref: "#/components/tag"
  tag:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        format: cuid
        example: tz4a98xxat96iws9zmbrgj3a
      userId:
        type: string
        format: cuid
        example: q6jy42jq92xypbao731oj7x8
      name:
        type: string
  category:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        format: cuid
        example: pfh0haxfpzowht3oi213cqos
      userId:
        type: string
        format: cuid
        example: nc6bzmkmd014706rfda898to
      name:
        type: string
        description: Name of your category
      description:
        type: string
        description: Description for the category
  NotFoundError:
    type: object
    properties:
      statusCode:
        type: number
        enum:
          - 404
      error:
        type: string
        enum:
          - Not Found
      message:
        type: string
        example: Not Found
    required:
      - statusCode
      - error
  ForbiddenError:
    type: object
    properties:
      statusCode:
        type: number
        enum:
          - 403
      error:
        type: string
        enum:
          - Forbidden
      message:
        type: string
        example: Forbidden
    required:
      - statusCode
      - error
  TooManyRequestsError:
    type: object
    properties:
      statusCode:
        type: number
        enum:
          - 429
      error:
        type: string
        enum:
          - Too Many Requests
      message:
        type: string
        example: Too Many Requests
    required:
      - statusCode
      - error
  UnauthorizedError:
    type: object
    properties:
      statusCode:
        type: number
        enum:
          - 401
      error:
        type: string
        enum:
          - Unauthorized
      message:
        type: string
        example: Bad Token
    required:
      - statusCode
      - error
security:
  - ApiKeyAuth: []
