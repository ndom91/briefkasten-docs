openapi: 3.0.0
info:
  title: Briefkasten API
  description: API Docs for https://briefkastenhq.com/api
  version: 0.1.9
servers:
  - url: http://briefkastenhq.com/api
    description: Production
paths:
  "/bookmarks":
    get:
      summary: Search for bookmarks
      parameters:
        - name: query
          in: query
          description: Search query string
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                description: List of bookmark results
                type: array
                items:
                  $ref: "#/components/bookmark"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    post:
      summary: Create bookmarks
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      requestBody:
        description: The bookmark to create
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/bookmark"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/bookmark"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    put:
      summary: Update bookmarks
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      requestBody:
        description: The bookmark to update
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/bookmark"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/bookmark"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    delete:
      summary: Delete bookmarks
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
  "/tags":
    get:
      summary: Search for tags
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                description: List of tag results
                type: array
                items:
                  $ref: "#/components/tag"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    post:
      summary: Create tag
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      requestBody:
        description: The tag to create
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/tag"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/tag"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    put:
      summary: Update tag
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      requestBody:
        description: The tag to update
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/tag"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/tag"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    delete:
      summary: Delete tag
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
  "/categories":
    get:
      summary: Search for categories
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                description: List of categories results
                type: array
                items:
                  $ref: "#/components/category"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    post:
      summary: Create categories
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      requestBody:
        description: The category to create
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/category"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/category"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    put:
      summary: Update categories
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      requestBody:
        description: The category to update
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/category"
      responses:
        "200":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/category"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
    delete:
      summary: Delete categories
      parameters:
        - schema:
            type: string
          description: Query
          name: query
          in: query
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "429":
          description: Too Many Requests
components:
  bookmark:
    type: object
    properties:
      id:
        type: string
      userId:
        type: string
      title:
        type: string
      url:
        type: string
      category?:
        type: string
      desc?:
        type: string
      tags?:
        type: array
        items:
          $ref: "#/components/tag"
  tag:
    type: object
    properties:
      id:
        type: string
      userId:
        type: string
      name:
        type: string
      emoji:
        type: string
  category:
    type: object
    properties:
      id:
        type: string
      userId:
        type: string
      name:
        type: string
      desc:
        type: string
  NotFoundError:
    type: object
    properties:
      statusCode:
        type: number
        enum:
          - 404
      error:
        type: string
        enum:
          - Not Found
      message:
        type: string
        example: Not Found
    required:
      - statusCode
      - error
  ForbiddenError:
    type: object
    properties:
      statusCode:
        type: number
        enum:
          - 403
      error:
        type: string
        enum:
          - Forbidden
      message:
        type: string
        example: Forbidden
    required:
      - statusCode
      - error
  TooManyRequestsError:
    type: object
    properties:
      statusCode:
        type: number
        enum:
          - 429
      error:
        type: string
        enum:
          - Too Many Requests
      message:
        type: string
        example: Too Many Requests
    required:
      - statusCode
      - error
  UnauthorizedError:
    type: object
    properties:
      statusCode:
        type: number
        enum:
          - 401
      error:
        type: string
        enum:
          - Unauthorized
      message:
        type: string
        example: Bad Token
    required:
      - statusCode
      - error
